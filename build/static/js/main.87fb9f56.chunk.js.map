{"version":3,"sources":["components/login.component.js","components/signup.component.js","components/NavBarMain.js","components/Footer.js","pages/HomePage.js","pages/projects.js","components/NavBarAuth.js","components/logout.componenet.js","pages/technews.js","pages/buildPC.js","App.js","reportWebVitals.js","index.js"],"names":["Login","Component","constructor","arguments","state","usernameOrEmail","password","errorMessage","isLoggedIn","loginSuccessMessage","handleChange","e","this","setState","target","name","value","handleSubmit","async","preventDefault","response","axios","post","console","log","data","status","localStorage","setItem","userId","username","successMessage","concat","error","render","React","createElement","Navigate","to","className","onSubmit","role","type","placeholder","onChange","SignUp","email","redirectToLogin","showSignupModal","setTimeout","_error$response","_error$response$data","message","renderSignupModal","NavBarMain","getItem","Link","style","fontSize","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","href","Footer","HomePage","src","alt","Projects","builds","isLoading","imageUrls","showModal","fetchUserBuilds","Error","get","reduce","acc","build","imageUrl","calculateTotalPrice","components","total","component","price","handleImageUrlChange","buildId","put","handleImageUrlInputChange","prevState","handleDeleteBuild","delete","renderComponentList","map","index","key","specs","renderBuilds","toFixed","onClick","componentDidMount","renderModal","hasBuilds","length","NavBarAuth","Logout","props","super","navigate","showLogoutModal","removeItem","renderLogoutModal","TechNews","news","setNews","useState","currentPage","setCurrentPage","totalPages","setTotalPages","API_KEY","fetchNews","useCallback","keywords","encodeURIComponent","articles","Math","min","ceil","totalResults","useEffect","item","urlToImage","title","description","url","rel","Array","from","_","i","pageNumber","window","scrollTo","BuildPC","fetchComponentsByType","componentType","then","componentsOfType","catch","handleSelectChange","selectedComponents","addToBuild","componentId","Number","find","c","updatedBuild","addedComponents","componentIdsForCheck","componentIds","compatibilityResult","recentlyAdded","alert","removeFromBuild","selectedComponentId","filter","saveBuild","case","motherboard","cpu","ram","gpu","psu","ssd","cooler","renderDropdown","label","messageClass","htmlFor","renderSelectedComponent","some","selectedComponent","totalPrice","App","Router","Routes","Route","path","element","Fragment","reportWebVitals","onPerfEntry","Function","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","StrictMode"],"mappings":"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","file":"static/js/main.87fb9f56.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport { Navigate } from 'react-router-dom';\r\n\r\nclass Login extends Component {\r\n  state = {\r\n    usernameOrEmail: '',\r\n    password: '',\r\n    errorMessage: '', // State to hold the error message\r\n    isLoggedIn: false, // State to track if the user is logged in\r\n    loginSuccessMessage: '', // State to hold the success message\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    this.setState({ errorMessage: '', loginSuccessMessage: '' }); // Clear any existing messages\r\n    try {\r\n      const { usernameOrEmail, password } = this.state;\r\n      const response = await axios.post('http://localhost:8080/api/auth/signin', { usernameOrEmail, password });\r\n      console.log(\"Response data:\", response.data);\r\n\r\n      // Check if login was successful\r\n      if (response.status === 200) {\r\n        // Store user ID in local storage (assuming response.data contains the user ID)\r\n        localStorage.setItem('userId', response.data.userId);\r\n        localStorage.setItem('username', response.data.username);\r\n        console.log(\"Username stored:\", response.data.username);\r\n\r\n\r\n        // Set isLoggedIn to true to indicate that the user is logged in\r\n        this.setState({ isLoggedIn: true });\r\n\r\n        // Extract and set the success message from the backend response\r\n        this.setState({ successMessage: `Welcome, ${response.data.username}!` });\r\n      }\r\n\r\n    } catch (error) {\r\n      console.error('Login error', error.response);\r\n      this.setState({ \r\n        errorMessage: 'Email or password is incorrect',\r\n        // Reset form fields\r\n        usernameOrEmail: '',\r\n        password: ''\r\n      });\r\n    }\r\n};\r\n\r\n  render() {\r\n    // Check if the user is logged in, and if so, navigate to the home page\r\n    if (this.state.isLoggedIn) {\r\n      return <Navigate to=\"/homepage\" />;\r\n    }\r\n    return (\r\n      <div className=\"d-flex align-items-center justify-content-center min-vh-50\">\r\n      <div className=\"col-md-6 col-lg-4 mx-auto\">\r\n        <div className=\"bg-light rounded-4 py-5 px-4 px-md-5\">\r\n        <div className=\"custom-form-container\">\r\n        <form onSubmit={this.handleSubmit}>\r\n          <h3>Sign In</h3>\r\n\r\n          {/* Display success message */}\r\n          {this.state.loginSuccessMessage && (\r\n            <div className=\"alert alert-success\" role=\"alert\">\r\n              {this.state.loginSuccessMessage}\r\n            </div>\r\n          )}\r\n\r\n          {/* Display error message */}\r\n          {this.state.errorMessage && (\r\n            <div className=\"alert alert-danger\" role=\"alert\">\r\n              {this.state.errorMessage}\r\n            </div>\r\n          )}\r\n\r\n          <div className=\"mb-3\">\r\n            <label>Username or Email</label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              placeholder=\"Enter username or Email\"\r\n              name=\"usernameOrEmail\"\r\n              value={this.state.usernameOrEmail}\r\n              onChange={this.handleChange}\r\n            />\r\n          </div>\r\n          <div className=\"mb-3\">\r\n            <label>Password</label>\r\n            <input\r\n              type=\"password\"\r\n              className=\"form-control\"\r\n              placeholder=\"Enter password\"\r\n              name=\"password\"\r\n              value={this.state.password}\r\n              onChange={this.handleChange}\r\n            />\r\n          </div>\r\n          <div className=\"d-grid\">\r\n            <button type=\"submit\" className=\"btn btn-primary\">\r\n              Submit\r\n            </button>\r\n          </div>\r\n        </form>\r\n        </div>\r\n        </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Login;\r\n","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport { Navigate } from 'react-router-dom';\r\n\r\nexport default class SignUp extends Component {\r\n  state = {\r\n    name: '',\r\n    username: '',\r\n    email: '',\r\n    password: '',\r\n    errorMessage: '',\r\n    redirectToLogin: false,\r\n    showSignupModal: false // State for showing the modal\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    this.setState({ errorMessage: '' }); // Clear any existing error message\r\n    try {\r\n      const { name, username, email, password } = this.state;\r\n      await axios.post('http://localhost:8080/api/auth/signup', { name, username, email, password });\r\n      // Trigger the modal display\r\n      this.setState({ showSignupModal: true });\r\n      setTimeout(() => {\r\n        this.setState({ redirectToLogin: true });\r\n      }, 3000); // Redirect to login after 3 seconds\r\n    } catch (error) {\r\n      console.error('Signup error', error.response);\r\n      this.setState({ \r\n        errorMessage: error.response?.data?.message || 'Username or email already exists.'\r\n      });\r\n    }\r\n  };\r\n\r\n  renderSignupModal() {\r\n    if (!this.state.showSignupModal) {\r\n      return null;\r\n    }\r\n\r\n    return (\r\n      <div className=\"save-build-modal-backdrop\">\r\n        <div className=\"save-build-modal-content\">\r\n          <div className=\"modal-header\">Registration Successful</div>\r\n          <div className=\"modal-body\">\r\n            Your account has been created successfully. Redirecting to login page...\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    // Redirect to login page when registration is successful\r\n    if (this.state.redirectToLogin) {\r\n      return <Navigate to=\"/sign-in\" />;\r\n    }\r\n    return (\r\n      <div className=\"d-flex align-items-center justify-content-center min-vh-50\">\r\n      <div className=\"col-md-6 col-lg-4 mx-auto\">\r\n        <div className=\"bg-light rounded-4 py-5 px-4 px-md-5\">\r\n        <div className=\"custom-form-container\">\r\n      <form onSubmit={this.handleSubmit}>\r\n        <h3>Sign Up</h3>\r\n         {/* Display error message */}\r\n         {this.state.errorMessage && (\r\n          <div className=\"alert alert-danger\" role=\"alert\">\r\n            {this.state.errorMessage}\r\n          </div>\r\n        )}\r\n        <div className=\"mb-3\">\r\n          <label>Name</label>\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            placeholder=\"Name\"\r\n            name=\"name\"\r\n            value={this.state.name}\r\n            onChange={this.handleChange}\r\n          />\r\n        </div>\r\n        <div className=\"mb-3\">\r\n          <label>Username</label>\r\n          <input \r\n            type=\"text\" \r\n            className=\"form-control\" \r\n            placeholder=\"Username\"\r\n            name=\"username\"\r\n            value={this.state.username}\r\n            onChange={this.handleChange} \r\n          />\r\n        </div>\r\n        <div className=\"mb-3\">\r\n          <label>Email address</label>\r\n          <input\r\n            type=\"email\"\r\n            className=\"form-control\"\r\n            placeholder=\"Enter email\"\r\n            name=\"email\"\r\n            value={this.state.email}\r\n            onChange={this.handleChange}\r\n          />\r\n        </div>\r\n        <div className=\"mb-3\">\r\n          <label>Password</label>\r\n          <input\r\n            type=\"password\"\r\n            className=\"form-control\"\r\n            placeholder=\"Enter password\"\r\n            name=\"password\"\r\n            value={this.state.password}\r\n            onChange={this.handleChange}\r\n          />\r\n        </div>\r\n        <div className=\"d-grid\">\r\n          <button type=\"submit\" className=\"btn btn-primary\">\r\n            Sign Up\r\n          </button>\r\n        </div>\r\n      </form>\r\n      </div>\r\n      </div>\r\n      </div>\r\n      {this.renderSignupModal()}\r\n      </div>\r\n    )\r\n  }\r\n}","import React from \"react\"\r\nimport { Link } from \"react-router-dom\";\r\nfunction NavBarMain() {\r\n\r\n    const username = localStorage.getItem('username') || 'User';\r\n\r\n\r\n    return (\r\n        <div>\r\n            <nav className=\"navbar navbar-expand-lg navbar-light bg-white py-3\">\r\n            <div className=\"container px-5\">\r\n            <Link className=\"navbar-brand\" to=\"/homepage\">\r\n            <span className=\"fw-bolder text-primary\">PC Builder & Compatibility Checker</span>\r\n          </Link>\r\n                <div className=\"flex-grow-1 d-flex justify-content-center\">\r\n                    <span style={{ fontSize: 'small' }}><b className=\"text-gradient d-inline\">Welcome, {username}!</b></span>\r\n                </div>\r\n                    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\"><span className=\"navbar-toggler-icon\"></span></button>\r\n                    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                        <ul className=\"navbar-nav ms-auto mb-2 mb-lg-0 small fw-bolder \">\r\n                            <li className=\"nav-item\"><a className=\"nav-link\" href=\"homepage\">Home</a></li>\r\n                            <li className=\"nav-item\"><a className=\"nav-link\" href=\"technews\">News</a></li>\r\n                            <li className=\"nav-item\"><a className=\"nav-link\" href=\"projects\">My Builds</a></li>\r\n                            <li className=\"nav-item\"><a className=\"nav-link\" href=\"buildpc\">Build PC</a></li>\r\n                            <li className=\"nav-item\"><a className=\"nav-link\" href=\"/logout\">Log out</a></li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </nav> </div>\r\n    )\r\n}\r\n\r\nexport default NavBarMain","import React from \"react\";\r\n\r\nfunction Footer(){\r\n    return(\r\n        <div>\r\n            <footer className=\"bg-white py-4 mt-auto\">\r\n            <div className=\"container px-5\">\r\n            <div className=\"d-flex justify-content-center fs-2 gap-4\">\r\n                                <a className=\"text-gradient\" href=\"https://www.linkedin.com/in/raivo-zelcs92/\"><i className=\"bi bi-linkedin\"></i></a>\r\n                                <a className=\"text-gradient\" href=\"https://www.facebook.com/raivo.zelcs.96!\"><i className=\"bi bi-facebook\"></i></a>\r\n                                <a className=\"text-gradient\" href=\"https://github.com/RaivoZTech\"><i className=\"bi bi-github\"></i></a>\r\n                            </div>\r\n                <div className=\"row align-items-center justify-content-between flex-column flex-sm-row\">\r\n                    <div className=\"col-auto\"><div className=\"small m-0\">Copyright &copy; PC@Comp 2023</div></div>\r\n                    <div className=\"col-auto\">\r\n                        <a className=\"small\" href=\"#!\">Privacy</a>\r\n                        <span className=\"mx-1\">&middot;</span>\r\n                        <a className=\"small\" href=\"#!\">Terms</a>\r\n                        <span className=\"mx-1\">&middot;</span>\r\n                        <a className=\"small\" href=\"#!\">Contact</a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </footer>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Footer","import React from \"react\";\r\nimport NavBarMain from \"../components/NavBarMain\";\r\nimport Footer from \"../components/Footer\";\r\n\r\nfunction HomePage() {\r\n  return (\r\n    <div>\r\n    <NavBarMain />\r\n<div className=\"d-flex flex-column h-100\">\r\n    <main className=\"flex-shrink-0\">\r\n        {/* Header*/}\r\n        <header className=\"py-5\">\r\n            <div className=\"container px-5 pb-5\">\r\n                <div className=\"row gx-5 align-items-center\">\r\n                    <div className=\"col-xxl-5\">\r\n                        {/* Header text content*/}\r\n                        <div className=\"text-center text-xxl-start\">\r\n                            <div className=\"badge bg-gradient-primary-to-secondary text-white mb-4\"><div className=\"text-uppercase\">Design &middot; Build &middot; Creativity</div></div>\r\n                            <div className=\"fs-3 fw-light text-muted\">Welcome to PC Builder & compatibility checker</div>\r\n                            <h1 className=\"display-3 fw-bolder mb-5\"><span className=\"text-gradient d-inline\">Let's start building your custom PC</span></h1>\r\n                            <div className=\"d-grid gap-3 d-sm-flex justify-content-sm-center justify-content-xxl-start mb-3\">\r\n                                <a className=\"btn btn-primary btn-lg px-5 py-3 me-sm-3 fs-6 fw-bolder\" href=\"buildpc\">Start Build</a>\r\n                                <a className=\"btn btn-outline-dark btn-lg px-5 py-3 fs-6 fw-bolder\" href=\"projects\">View builds</a>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-xxl-7\">\r\n                        {/* Header profile picture*/}\r\n                        <div className=\"d-flex justify-content-center mt-5 mt-xxl-0\">\r\n                            <div className=\"profile bg-gradient-primary-to-secondary\">\r\n                                {/* TIP: For best results, use a photo with a transparent background like the demo example below*/}\r\n                                {/* Watch a tutorial on how to do this on YouTube (link)*/}\r\n                                <img className=\"profile-img\" src=\"https://www.yugatech.com/wp-content/uploads/2021/03/pd-gundam.png\" alt=\"...\" />\r\n                               \r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </header>\r\n        {/* About Section*/}\r\n        <section className=\"bg-light py-5\">\r\n            <div className=\"container px-5\">\r\n                <div className=\"row gx-5 justify-content-center\">\r\n                    <div className=\"col-xxl-8\">\r\n                        <div className=\"text-center my-5\">\r\n                            <h2 className=\"display-5 fw-bolder\"><span className=\"text-gradient d-inline\">About the Project</span></h2>\r\n                                <p className=\"lead fw-light mb-4\">Welcome to the PC Builder & Compatibility Checker.</p>\r\n                                <p className=\"text-muted\">This project is designed to simplify the process of building your\r\n                                     own PC by providing a user-friendly interface to select and assemble components.\r\n                                      Our tool ensures compatibility between selected parts, saving time and reducing the complexity often associated with building a custom PC.\r\n                                       Whether you are a gaming enthusiast, a professional content creator, or just stepping into the world of custom-built PCs, our platform\r\n                                        is tailored to meet your needs. Here, you can explore, create, and validate your dream PC build with confidence.</p>\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    </main>\r\n    <Footer />\r\n</div>\r\n</div>\r\n  );\r\n}\r\n\r\nexport default HomePage;","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport NavBarMain from \"../components/NavBarMain\";\r\nimport Footer from \"../components/Footer\";\r\n\r\nclass Projects extends Component {\r\n    state = {\r\n        builds: [],\r\n        isLoading: true,\r\n        error: null,\r\n        imageUrls: {}, // State to track image URLs for each build\r\n        showModal: false\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.fetchUserBuilds();\r\n    }\r\n\r\n    fetchUserBuilds = async () => {\r\n        try {\r\n            const userId = localStorage.getItem('userId');\r\n            if (!userId) {\r\n                throw new Error('User ID not found');\r\n            }\r\n    \r\n            const response = await axios.get(`http://localhost:8080/api/pcbuilds/user/${userId}`);\r\n            this.setState({ \r\n                builds: response.data, \r\n                isLoading: false,\r\n                imageUrls: response.data.reduce((acc, build) => ({ ...acc, [build.id]: build.imageUrl || '' }), {}) // Initialize imageUrls state\r\n            });\r\n        } catch (error) {\r\n            this.setState({ error: error, isLoading: false });\r\n        }\r\n    };\r\n\r\n    calculateTotalPrice = (components) => {\r\n        return components.reduce((total, component) => total + component.price, 0);\r\n    };\r\n\r\n    handleImageUrlChange = async (buildId, imageUrl) => {\r\n        try {\r\n            await axios.put(`http://localhost:8080/api/pcbuilds/${buildId}/image`, { imageUrl });\r\n            this.fetchUserBuilds(); // Re-fetch builds to update the UI\r\n        } catch (error) {\r\n            console.error('Error updating image URL', error);\r\n            // Handle error (e.g., show error message)\r\n        }\r\n    };\r\n\r\n    handleImageUrlInputChange = (buildId, imageUrl) => {\r\n        this.setState(prevState => ({\r\n            imageUrls: {\r\n                ...prevState.imageUrls,\r\n                [buildId]: imageUrl\r\n            }\r\n        }));\r\n    };\r\n\r\n    handleDeleteBuild = async (buildId) => {\r\n    try {\r\n        await axios.delete(`http://localhost:8080/api/pcbuilds/${buildId}`);\r\n        this.fetchUserBuilds(); // Re-fetch builds to update the UI\r\n        this.setState({ showModal: true });\r\n    } catch (error) {\r\n        console.error('Error deleting build', error);\r\n        // Handle error (e.g., show error message)\r\n    }\r\n};\r\n\r\n    renderComponentList = (components) => {\r\n        return components.map((component, index) => (\r\n            <div key={index} className=\"mb-3\">\r\n                <h5 className=\"fw-bold\">{component.type}</h5>\r\n                <p className=\"small mb-0\">Name: {component.name}</p>\r\n                <p className=\"small\">Specs: {component.specs}</p>\r\n            </div>\r\n        ));\r\n    };\r\n    \r\n    renderModal() {\r\n        if (this.state.showModal) {\r\n            return (\r\n                <div className=\"save-build-modal-backdrop\">\r\n                    <div className=\"save-build-modal-content\">\r\n                        <div className=\"modal-header\">Build Deleted Successfully!</div>\r\n                        <div className=\"modal-body\">\r\n                            Your custom PC build has been deleted.\r\n                        </div>\r\n                        <button \r\n                            onClick={() => this.setState({ showModal: false })}\r\n                            className=\"modal-button\"\r\n                        >\r\n                            Close\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n        return null;\r\n    }\r\n\r\n    renderBuilds = () => {\r\n        const { imageUrls } = this.state;\r\n    \r\n        return this.state.builds.map((build, index) => (\r\n            <div className=\"card overflow-hidden shadow rounded-4 border-0 mb-5\" key={build.id}>\r\n                <div className=\"row g-0\">\r\n                    <div className=\"col-md-6 p-5\">\r\n                        <h2 className=\"fw-bolder\">Build {index + 1}</h2>\r\n                        {this.renderComponentList(build.components)}\r\n                        <b><p>Total Price: €{this.calculateTotalPrice(build.components).toFixed(2)}</p></b>\r\n                        <input \r\n                            type=\"text\" \r\n                            className=\"form-control mb-2\"\r\n                            placeholder=\"Enter image URL\"\r\n                            value={imageUrls[build.id] || \"\"}\r\n                            onChange={(e) => this.handleImageUrlInputChange(build.id, e.target.value)}\r\n                        />\r\n                        <button \r\n                            className=\"btn btn-primary\"\r\n                            onClick={() => this.handleImageUrlChange(build.id, imageUrls[build.id])}\r\n                        >\r\n                            Update Image\r\n                        </button>\r\n                        <button \r\n                        className=\"btn btn-danger ms-3\" // Added ms-2 for margin on the start side\r\n                        onClick={() => this.handleDeleteBuild(build.id)}\r\n                    >\r\n                        Delete Build\r\n                    </button>\r\n                    </div>\r\n                    <div className=\"col-md-6 position-relative\">\r\n                        <img className=\"img-fluid rounded-end\" src={build.imageUrl || \"https://dummyimage.com/600x400/343a40/6c757d\"} alt=\"Build\" />\r\n                        \r\n                    </div>\r\n                </div>\r\n            </div>\r\n        ));\r\n    };\r\n    \r\n\r\n    render() {\r\n        const { isLoading, error, builds } = this.state;\r\n        const hasBuilds = builds.length > 0;\r\n    \r\n        return (\r\n            <div className=\"d-flex flex-column h-100 bg-light\">\r\n                <NavBarMain />\r\n                <main className=\"flex-shrink-0\">\r\n                    <section className=\"py-5\">\r\n                        <div className=\"container px-5 mb-5\">\r\n                            <div className=\"text-center mb-5\">\r\n                                <h1 className=\"display-5 fw-bolder mb-0\"><span className=\"text-gradient d-inline\">My Builds</span></h1>\r\n                            </div>\r\n                            <div className=\"row gx-5 justify-content-center\">\r\n                                <div className=\"col-lg-11 col-xl-9 col-xxl-8\">\r\n                                    {isLoading ? <p>Loading builds...</p> : this.renderBuilds()}\r\n                                    {error && <p className=\"text-danger\">{error.message}</p>}\r\n                                    {!hasBuilds && !isLoading && (\r\n                                        <div className=\"alert alert-info\">\r\n                                            You haven't built anything yet.\r\n                                        </div>\r\n                                    )}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </section>\r\n                </main>\r\n                {this.renderModal()}\r\n                <Footer />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Projects;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction NavBarAuth() {\r\n  return (\r\n    <div>\r\n      <nav className=\"navbar navbar-expand-lg navbar-light bg-white py-3\">\r\n        <div className=\"container px-5\">\r\n          <Link className=\"navbar-brand\" to=\"/\">\r\n            <span className=\"fw-bolder text-primary\">PC Builder & Compatibility Checker</span>\r\n          </Link>\r\n          <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarTogglerDemo02\" aria-controls=\"navbarTogglerDemo02\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarTogglerDemo02\">\r\n            <ul className=\"navbar-nav ms-auto mb-2 mb-lg-0 small fw-bolder\">\r\n              <li className=\"nav-item\">\r\n                <Link className=\"nav-link\" to=\"/sign-in\">Login</Link>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <Link className=\"nav-link\" to=\"/sign-up\">Sign up</Link>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NavBarAuth;","import React, { Component } from 'react';\r\nimport { Navigate } from 'react-router-dom';\r\n\r\nclass Logout extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { navigate: false,\r\n            showLogoutModal: false\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        localStorage.removeItem('userId');\r\n        this.setState({ showLogoutModal: true });\r\n    \r\n        // Navigate after a delay\r\n        setTimeout(() => {\r\n            this.setState({ navigate: true });\r\n        }, 3000); // Delay for 3 seconds\r\n    }\r\n\r\n\r\n    renderLogoutModal() {\r\n        if (!this.state.showLogoutModal) {\r\n            return null;\r\n        }\r\n    \r\n        return (\r\n            <div className=\"save-build-modal-backdrop\">\r\n                <div className=\"save-build-modal-content\">\r\n                    <h4>Logged Out Successfully</h4>\r\n                    <p>You have been logged out.</p>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    render() {\r\n       \r\n        if (this.state.navigate) {\r\n            return <Navigate to=\"/sign-in\" />;\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <p>Logging out...</p>\r\n                {this.renderLogoutModal()}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Logout;","import React, { useEffect, useState, useCallback } from 'react';\r\nimport axios from 'axios';\r\nimport NavBarMain from '../components/NavBarMain';\r\nimport Footer from '../components/Footer';\r\n\r\nfunction TechNews() {\r\n    const [news, setNews] = useState([]);\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [totalPages, setTotalPages] = useState(0);\r\n    const API_KEY = 'a0751c10fc4049d8a6a9bcf65c7cb8d5';\r\n    const MAX_PAGES = 5;\r\n\r\n    // Memoize the fetchNews function\r\nconst fetchNews = useCallback(async () => {\r\n    try {\r\n        const keywords = '\"CPU\" OR \"GPU\" OR \"MOTHERBOARD\" OR \"PSU\" OR \"SSD\" OR \"NVIDIA\" OR \"AMD\" OR \"COMPUTER HARDWARE\" OR \"PC COMPONENTS\" OR \"GAMING COMPUTERS\"';\r\n        const response = await axios.get(`https://newsapi.org/v2/everything?q=${encodeURIComponent(keywords)}&language=en&pageSize=10&page=${currentPage}&apiKey=${API_KEY}`);\r\n        setNews(response.data.articles);\r\n        setTotalPages(Math.min(Math.ceil(response.data.totalResults / 10), MAX_PAGES));\r\n    } catch (error) {\r\n        console.error('Error fetching news:', error);\r\n    }\r\n}, [currentPage, API_KEY]); // Dependencies\r\n\r\nuseEffect(() => {\r\n    fetchNews();\r\n}, [fetchNews]);\r\n\r\nconst handlePageChange = (newPage) => {\r\n    setCurrentPage(newPage);\r\n    window.scrollTo(0, 0);\r\n};\r\n\r\n\r\n    return (\r\n        <div>\r\n            <NavBarMain />\r\n            <div className=\"d-flex flex-column h-100 bg-light\">\r\n                <main className=\"flex-shrink-0\">\r\n                    <div className=\"container px-5 my-5\">\r\n                        <div className=\"text-center mb-5\">\r\n                        <h1 className=\"display-5 fw-bolder mb-0\"><span className=\"text-gradient d-inline\">Latest Tech News</span></h1>\r\n                        </div>\r\n                        <div className=\"news-container\">\r\n                            {news.map((item, index) => (\r\n                                <div key={index} className=\"news-item\">\r\n                                    <img src={item.urlToImage} alt={item.title} className=\"news-image\" />\r\n                                    <div className=\"news-content\">\r\n                                        <h2 className=\"news-title\">{item.title}</h2>\r\n                                        <p className=\"news-description\">{item.description}</p>\r\n                                        <a href={item.url} className=\"read-more-btn\" target=\"_blank\" rel=\"noopener noreferrer\">Read More</a>\r\n                                    </div>\r\n                                </div>\r\n                            ))}\r\n                        </div>\r\n                        <div className=\"pagination-container\">\r\n                            {Array.from({ length: totalPages }, (_, i) => i + 1).map(pageNumber => (\r\n                                <button key={pageNumber} onClick={() => handlePageChange(pageNumber)} className={pageNumber === currentPage ? \"page-btn active\" : \"page-btn\"}>\r\n                                    {pageNumber}\r\n                                </button>\r\n                            ))}\r\n                        </div>\r\n                    </div>\r\n                </main>\r\n                <Footer />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TechNews;\r\n","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport NavBarMain from '../components/NavBarMain';\r\nimport Footer from '../components/Footer';\r\n\r\nclass BuildPC extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            components: {\r\n                case: [],\r\n                motherboard: [],\r\n                cpu: [],\r\n                ram: [],\r\n                gpu: [],\r\n                psu: [],\r\n                ssd: [],\r\n                cooler:[]\r\n            },\r\n            selectedComponents: {\r\n                case: '',\r\n                motherboard: '',\r\n                cpu: '',\r\n                ram: '',\r\n                gpu: '',\r\n                psu: '',\r\n                ssd: '',\r\n                cooler: ''\r\n            },\r\n            recentlyAdded: {\r\n                case: false,\r\n                motherboard: false,\r\n                cpu: false,\r\n                ram: false,\r\n                gpu: false,\r\n                psu: false,\r\n                ssd: false,\r\n                cooler: false\r\n            },\r\n            addedComponents: [],\r\n            showModal: false  \r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        // Fetch initial data for all component types\r\n        this.fetchComponentsByType('case');\r\n        this.fetchComponentsByType('motherboard');\r\n        this.fetchComponentsByType('cpu');\r\n        this.fetchComponentsByType('ram');\r\n        this.fetchComponentsByType('gpu');\r\n        this.fetchComponentsByType('psu');\r\n        this.fetchComponentsByType('ssd');\r\n        this.fetchComponentsByType('cooler');\r\n        \r\n    }\r\n\r\n    fetchComponentsByType = (componentType) => {\r\n        axios.get(`http://localhost:8080/api/components/type/${componentType}`)\r\n            .then((response) => {\r\n                const componentsOfType = response.data;\r\n                this.setState(prevState => ({\r\n                    components: {\r\n                        ...prevState.components,\r\n                        [componentType]: componentsOfType\r\n                    }\r\n                }));\r\n            })\r\n            .catch((error) => {\r\n                console.error(error);\r\n            });\r\n    }\r\n\r\n    handleSelectChange = (componentType, value) => {\r\n        this.setState(prevState => ({\r\n            selectedComponents: {\r\n                ...prevState.selectedComponents,\r\n                [componentType]: value\r\n            }\r\n        }));\r\n    }\r\n    \r\n    addToBuild = async (componentType) => {\r\n        const componentId = Number(this.state.selectedComponents[componentType]);\r\n        if (componentId) {\r\n            const component = this.state.components[componentType].find(c => c.id === componentId);\r\n    \r\n            // Temporarily add the new component to the build for compatibility check\r\n            const updatedBuild = [...this.state.addedComponents, component];\r\n    \r\n            if (updatedBuild.length > 1) {\r\n                // Prepare data for compatibility check\r\n                const componentIdsForCheck = updatedBuild.map(c => c.id);\r\n    \r\n                try {\r\n                    // Call backend compatibility check endpoint\r\n                    console.log(\"Sending for compatibility check:\", { componentIds: componentIdsForCheck });\r\n                    const response = await axios.post(`http://localhost:8080/api/pcbuilds/check-compatibility`, { componentIds: componentIdsForCheck });\r\n                    \r\n                    const compatibilityResult = response.data;\r\n                    console.log(\"Response data:\", compatibilityResult);\r\n    \r\n                    if (compatibilityResult === \"Compatible\") {\r\n                        // If compatible, update state with the new component\r\n                        this.setState({\r\n                            addedComponents: updatedBuild,\r\n                            recentlyAdded: {\r\n                                ...this.state.recentlyAdded,\r\n                                [componentType]: true\r\n                            }\r\n                        }, () => {\r\n                            setTimeout(() => {\r\n                                this.setState(prevState => ({\r\n                                    recentlyAdded: {\r\n                                        ...prevState.recentlyAdded,\r\n                                        [componentType]: false\r\n                                    }\r\n                                }));\r\n                            }, 2000);\r\n                        });\r\n                    } else {\r\n                        // If not compatible, display an error message\r\n                        alert(`Incompatibility Issue: ${compatibilityResult}`);\r\n                    }\r\n                } catch (error) {\r\n                    console.error('Error during compatibility check', error);\r\n                    alert(\"Error occurred while checking compatibility.\");\r\n                }\r\n            } else {\r\n                // If there's only one component, just add it without compatibility check\r\n                this.setState(prevState => ({\r\n                    addedComponents: updatedBuild,\r\n                    recentlyAdded: {\r\n                        ...prevState.recentlyAdded,\r\n                        [componentType]: true\r\n                    }\r\n                }), () => {\r\n                    setTimeout(() => {\r\n                        this.setState(prevState => ({\r\n                            recentlyAdded: {\r\n                                ...prevState.recentlyAdded,\r\n                                [componentType]: false\r\n                            }\r\n                        }));\r\n                    });\r\n                });\r\n            }\r\n        }\r\n    };\r\n    \r\n\r\n    renderDropdown(componentType, label) {\r\n        const isRecentlyAdded = this.state.recentlyAdded[componentType];\r\n        const messageClass = isRecentlyAdded ? \"added-message-container added-message-active\" : \"added-message-container\";\r\n    \r\n        return (\r\n            <div className=\"mb-3\">\r\n                <b><label htmlFor={componentType} className=\"form-label\">{label}</label></b>\r\n                <div className=\"input-group\">\r\n                    <select\r\n                        className=\"form-select\"\r\n                        id={componentType}\r\n                        value={this.state.selectedComponents[componentType]}\r\n                        onChange={(e) => this.handleSelectChange(componentType, e.target.value)}\r\n                    >\r\n                        <option value=\"\">Select a {label}</option>\r\n                        {this.state.components[componentType].map((component, index) => (\r\n                            <option key={index} value={component.id}>\r\n                                {component.name} - €{component.price.toFixed(2)}\r\n                            </option>\r\n                        ))}\r\n                    </select>\r\n                    <button \r\n                        type=\"button\" \r\n                        className=\"btn btn-outline-primary\" \r\n                        onClick={() => this.addToBuild(componentType)}\r\n                    > Add to Build\r\n                    </button>\r\n                    <div className={messageClass}>\r\n                        <i className=\"bi bi-check-circle\"></i> Added\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    \r\n    renderSelectedComponent(componentType) {\r\n        const selectedComponentId = Number(this.state.selectedComponents[componentType]);\r\n        if (selectedComponentId) {\r\n            // Check if the component is in the addedComponents array\r\n            const isAdded = this.state.addedComponents.some(component => component.id === selectedComponentId);\r\n            if (isAdded) {\r\n                const selectedComponent = this.state.components[componentType].find(c => c.id === selectedComponentId);\r\n                if (selectedComponent) {\r\n                    return (\r\n                        <div className=\"alert alert-info mt-2\" >\r\n                            <div><b>Name:</b> {selectedComponent.name}</div>\r\n                            <div><b>Specifications:</b> {selectedComponent.specs}</div>\r\n                            <div><b>Price:</b> {selectedComponent.price}</div>\r\n                            <button \r\n                                className=\"btn btn-danger btn-sm\" \r\n                                onClick={() => this.removeFromBuild(componentType)}\r\n                            >\r\n                                Remove\r\n                            </button>\r\n                        </div>\r\n                    );\r\n                }\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    \r\n    removeFromBuild = (componentType) => {\r\n        const selectedComponentId = Number(this.state.selectedComponents[componentType]);\r\n        if (selectedComponentId) {\r\n            this.setState(prevState => ({\r\n                // Remove the component from addedComponents array\r\n                addedComponents: prevState.addedComponents.filter(c => c.id !== selectedComponentId),\r\n                // Reset the selected component for this type\r\n                selectedComponents: {\r\n                    ...prevState.selectedComponents,\r\n                    [componentType]: ''\r\n                }\r\n            }));\r\n        }\r\n    };\r\n    \r\n    saveBuild = async (e) => {\r\n        e.preventDefault()\r\n        const userId = localStorage.getItem(\"userId\");\r\n        const componentIds = this.state.addedComponents.map(component => component.id);\r\n    \r\n        try {\r\n            await axios.post('http://localhost:8080/api/pcbuilds', { userId, componentIds });\r\n            this.setState({ showModal: true });\r\n        } catch (error) {\r\n            console.error('Error saving build', error);\r\n        }\r\n    };\r\n\r\n    renderModal() {\r\n        if (this.state.showModal) {\r\n            return (\r\n                <div className=\"save-build-modal-backdrop\">\r\n                    <div className=\"save-build-modal-content\">\r\n                        <div className=\"modal-header\">Build Saved Successfully!</div>\r\n                        <div className=\"modal-body\">\r\n                            Your custom PC build has been saved.\r\n                        </div>\r\n                        <button \r\n                            onClick={() => this.setState({ showModal: false })}\r\n                            className=\"modal-button\"\r\n                        >\r\n                            Close\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n        return null;\r\n    }\r\n    \r\n    calculateTotalPrice = () => {\r\n        return this.state.addedComponents.reduce((total, component) => {\r\n            return total + component.price;\r\n        }, 0);\r\n    };\r\n\r\n    render() {\r\n        const totalPrice = this.calculateTotalPrice();\r\n        return (\r\n\r\n            <div className='d-flex flex-column h-100'>\r\n                <NavBarMain />\r\n                <main className=\"flex-shrink-0\">\r\n                    <section className=\"py-5\">\r\n                        <div className=\"container px-5\">\r\n                            <div className=\"bg-light rounded-4 py-5 px-4 px-md-5\">\r\n                            <div className=\"text-center mb-5\">\r\n                                <h1 className=\"display-5 fw-bolder mb-0\">\r\n                                    <span className=\"text-gradient d-inline\">Build your PC</span>\r\n                                    </h1>\r\n                                    </div>\r\n                                <div className=\"row gx-5 justify-content-center\">\r\n                                    <div className=\"col-lg-8 col-xl-6\">\r\n                                        <form >\r\n                                            {this.renderDropdown('case', 'Case')}\r\n                                            {this.renderSelectedComponent('case')}\r\n                                            {this.renderDropdown('motherboard', 'Motherboard')}\r\n                                            {this.renderSelectedComponent('motherboard')}\r\n                                            {this.renderDropdown('cpu', 'CPU')}\r\n                                            {this.renderSelectedComponent('cpu')}\r\n                                            {this.renderDropdown('ram', 'RAM')}\r\n                                            {this.renderSelectedComponent('ram')}\r\n                                            {this.renderDropdown('gpu', 'GPU')}\r\n                                            {this.renderSelectedComponent('gpu')}\r\n                                            {this.renderDropdown('psu', 'PSU')}\r\n                                            {this.renderSelectedComponent('psu')}\r\n                                            {this.renderDropdown('ssd', 'SSD')}\r\n                                            {this.renderSelectedComponent('ssd')}\r\n                                            {this.renderDropdown('cooler', 'Cooler')}\r\n                                            {this.renderSelectedComponent('cooler')}\r\n                                            <div className=\"text-center mb-3\">\r\n                                                    <h3>Total average price: €{totalPrice.toFixed(2)}</h3>\r\n                                                </div>\r\n                                                <button \r\n                                                    className=\"btn btn-success\" \r\n                                                    onClick={this.saveBuild}\r\n                                                >\r\n                                                    Save Build\r\n                                                </button>\r\n                                            \r\n                                        </form>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </section>\r\n                </main>\r\n                {this.renderModal()}\r\n                <Footer />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default BuildPC;\r\n\r\n","import React from 'react';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport Login from './components/login.component';\nimport SignUp from './components/signup.component';\nimport HomePage from './pages/HomePage';\nimport Projects from './pages/projects';\nimport NavBarAuth from './components/NavBarAuth';\nimport Logout from './components/logout.componenet';\nimport TechNews from './pages/technews';\nimport BuildPC from './pages/buildPC';\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"App\">\n        <Routes>\n          {/* Set the signin page as the initial landing page */}\n          <Route path=\"/\" element={<><NavBarAuth /><Login /></>} />\n          <Route path=\"/sign-up\" element={<><NavBarAuth /><SignUp /></>} />\n          <Route path=\"/sign-in\" element={<><NavBarAuth /><Login /></>} />\n          <Route path='/homepage' element={<><HomePage /></>} />\n          <Route path='/technews' element={<><TechNews/></>} />\n          <Route path='/projects' element={<><Projects/></>} />\n          <Route path='/buildPC' element={<><BuildPC/></>} />\n          <Route path=\"/logout\" element={<Logout />} />\n        </Routes>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}